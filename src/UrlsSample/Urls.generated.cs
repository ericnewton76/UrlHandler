using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using UrlHandler.Core;

namespace UrlsSample
{
	/// <summary>
	/// AUTOGENERATED
	/// </summary>
	public static partial class Urls
	{
		static Urls()
		{
			
		}

		/// <summary>
		/// Retrieves value of AppSettings[Urls:ThisEnvironment]
		/// </summary>
		public static string ThisEnvironment { get { return ConfigurationManager.AppSettings["Urls:ThisEnvironment"]; } }

		public static bool HasUrlsLink(string p)
		{
			if(p == null) return false;
			return S_UrlsRegex.IsMatch(p);
		}

		public static string FixUrlsLink(string p)
		{
			var regexMatches = S_UrlsRegex.Matches(p);

			foreach(System.Text.RegularExpressions.Match m in regexMatches)
			{
				PropertyInfo prop = typeof(Urls).GetProperty(m.Groups[1].Value, BindingFlags.IgnoreCase | BindingFlags.Static | BindingFlags.Public);

				if(prop != null)
				{
					UrlHandlerBase urlhandlerbase = (UrlHandlerBase)prop.GetGetMethod().Invoke(null, new object[] { });

					p = p.Replace(m.Groups[0].Value, "");

					return urlhandlerbase.FullyQualified(p);
				}
			}

			return p;
		}

		private static System.Text.RegularExpressions.Regex S_UrlsRegex = new System.Text.RegularExpressions.Regex(@"\{Urls.([A-Z]+)\}", System.Text.RegularExpressions.RegexOptions.IgnoreCase);
	}
}